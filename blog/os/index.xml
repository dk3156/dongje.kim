<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>운영체제 on DONGJE KIM</title><link>https://dk3156.github.io/dongje.kim/blog/os/</link><description>Recent content in 운영체제 on DONGJE KIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 31 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://dk3156.github.io/dongje.kim/blog/os/index.xml" rel="self" type="application/rss+xml"/><item><title>네트워크</title><link>https://dk3156.github.io/dongje.kim/blog/os/subfolder/network/</link><pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/os/subfolder/network/</guid><description>대규모 트래픽 처리가 중요한 이유: 잠재적인 고객이 이탈
서버가 터지는 이유는? 서버란? 외부로부터 들어오는 요청을 받아 처리해주고 응답을 주는 프로그램이 돌아가고 있는 어느 컴퓨터. 서버또한 처리속도, cpu, 메모리, 저장장치에 영향을 받는다.
웹 서버라는 프로세스가 있다면 그 프로세스 안에는 다수의 요청을 시분할 처리하는 스레드가 있다. 스레드 수가 많아봐야 결국 task를 처리하는 것은 cpu이기 때문에 속도에 한계가 있다. 요청을 너무 많이 큐에 넣다보면 오버플로우가 발생한다. 메모리 오버플로우가 나면 서버가 종료된다.
해결방안은?
요청을 충분히 빠르게 처리하면 된다.</description></item><item><title>운영체제</title><link>https://dk3156.github.io/dongje.kim/blog/os/subfolder/os/</link><pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/os/subfolder/os/</guid><description>운영체제 란? 시스템의 지원과 동작을 관리하는 소프트웨어. 프로세스, 저장장치, 네트워킹, 사용자, 하드웨어를 관리 과정 사용자 &amp;ndash;&amp;gt; 운영체제 &amp;ndash;&amp;gt; 주기억장치 / 보조기억장치 &amp;ndash;&amp;gt; CPU 사용자가 프로그램 실행을 요청 -&amp;gt; 운영체제가 프로그램 정보를 읽어 메모리에 로드한다. -&amp;gt; cpu는 프로그램을 가져다 메모리를 관리하고 명령물을 실행한다.
메모리 구조 Code, Data, Heap, Stack
code &amp;mdash;- 소스코드가 들어가는 부분. 실행할 프로그램의 코드가 저장된다. 실행 파일을 구성하는 명령어가 올라간다. (함수, 제어문, 상수)
data &amp;mdash;- global, static 변수가 할당되는 영역.</description></item></channel></rss>