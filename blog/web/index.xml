<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>웹 on DONGJE KIM</title><link>https://dk3156.github.io/dongje.kim/blog/web/</link><description>Recent content in 웹 on DONGJE KIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://dk3156.github.io/dongje.kim/blog/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Data Analytics</title><link>https://dk3156.github.io/dongje.kim/blog/web/subfolder/dataanalytic/</link><pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/web/subfolder/dataanalytic/</guid><description>Data Analytics Landscape Descriptive analytics ansers the question of what happened. It provides a historical view of adata to identify parrerns and trends. Examples: monthly sales report, social media post engagement
Diagnostic analytics delves into why something happened. It examines data to understand the cuase of event an dbehaviors.
Predictive analytics forecasts what might happen in the future based on past data Examples: sales forecasting and customer churn prediction
Prescriptive analytics suggests actions to tamek for optimal outcomes.</description></item><item><title>데이터베이스</title><link>https://dk3156.github.io/dongje.kim/blog/web/subfolder/database/</link><pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/web/subfolder/database/</guid><description>데이터베이스의 종류 key-value DB key-value 형태로 데이터를 저장합니다. 너무 간단해보여서 실용성을 없어보여지? 맞습니다. 그래서 서브용 디비로 많이 쓰입니다. 특수한 형태의 key-value 데이터베이스 Redis 는 많이 쓰이는데, 레디스는 데이터를 하드디스크에 저장하지 않고 일차적으로 램에 먼저 저장합니다. 램은 하드디스크보다 몇백배 빠르기 때문입니다. 그래서 사용자가 자주 쓰는 데이터는 레디스에 복사후 요청때 보여줍니다. 캐싱용 서브 디비로 활용합니다.
Relational DB 데이터를 표 형태로 저장하고 싶다면 relational db. row, column 형태로 (마치 엑셀같이) 데이터를 저장합니다. 많은 데이터를 저장하기 위해서는 MySQL, PostgreSQL, SQLite, Orcale 등을 사용합니다.</description></item><item><title>백엔드 개발자</title><link>https://dk3156.github.io/dongje.kim/blog/web/subfolder/backend/</link><pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/web/subfolder/backend/</guid><description>백엔드 개발자는 IT 서비스에 필수적인 데이터들과 관련된 모든 프로그램을 관리하는 직군입니다. 데이터를 저장하는 데이터베이스 부터 시작해서 데이터를 처리하기 위한 API 서버, 파일들을 저장하는 스토리지 등 정말 넓습니다. 보통 스타트업에서는 소수의 백엔드 개발자가 매니지드 서비스등을 활용해서 백엔드 서버의 환경을 구축합니다. 하지만 점점 서비스의 규모가 커지면 방대한 양의 데이터ㄹ와 데이터 요청을 다루기 위해서 많은 백엔드 개발자들이 필요해집니다. 그러면서 백엔드 개발자의 역할이 전문적으로 나뉘게 됩니다.
API 개발 API 서버는 클라이언트와 통신해서 데이터를 넘겨줍니다. 예를 들어 당근마켓의 웹, 앱은 전부 API 서버를 통해 상품 데이터들을 받아오고, 로그인, 결제 등을 수행합니다.</description></item><item><title>AngularJS, 양방향 바인딩이란?</title><link>https://dk3156.github.io/dongje.kim/blog/web/subfolder/angular/</link><pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/web/subfolder/angular/</guid><description>AngularJS 에서 양방향 데이터바인딩이란? 양방향 바인딩이란, 데이터 변화를 감지해 템플릿과 결합하여 화면을 생성하는 것. 양방향의 장점은, 코드량을 줄여준다는 것이다. 단점은 변화에 따라서 DOM 객체 전체를 렌더링해주거나 데이터를 바꿔줘야 해서 성능이 감소되는 경우이다.
단방향의 장점은, 반대로 성능저하 없이 DOM객체 갱신이 가능하고 데이터 흐름이 단방향이라 이해가 쉽고 디버깅이 쉬울 수 있다. 단점은 변화를 감지해서 업데이트하는 코드를 매번 작성해야한다.</description></item><item><title>웹 브라우저에 URL을 입력했을때, 무슨 일이 일어날까?</title><link>https://dk3156.github.io/dongje.kim/blog/web/subfolder/weburl/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/web/subfolder/weburl/</guid><description>웹 브라우저에 URL 을 입력했을 때, 일어나는 일들 웹 브라우저에 URL을 입력한다. 웹 브라우저가 도메인의 IP주소를 조회한다. (먼저 캐시를 찾고, 그 다음 DNS를 검색한다.) 웹 브라우저가 찾은 IP 주소를 기반으로 서버와의 TCP 연결을 시작한다. 웹 브라우저가 HTTP 요청을 서버로 전송한다. 웹 서버가 요청을 처리하고 응답을 웹 브라우저로 전송한다. 웹 브라우저가 전송 받은 컨텐츠를 렌더링한다. DNS 란? 인터넷 전화번호부. 유저는 도메인 이름을 통해 온라인 정보에 액세스. (www.google.com) DNS는 브라우저가 인터넷 자원을 로드할 수 있도록 도메인 이름을 IP주소로 변환.</description></item><item><title>웹 서비스 기술 정리</title><link>https://dk3156.github.io/dongje.kim/blog/web/subfolder/webtech/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/web/subfolder/webtech/</guid><description>클라이언트가 사용하는 웹(프론트엔드) 가장 먼저 고객들이 사용하기 위한 제품을 만들어야 합니다. (프론트엔드) 웹을 통해 고객은 로그인을 하고 판매하는 상품들을 보는 활동 등이 가능합니다. 또한 데스크탑, 모바일 등의 디바이스의 크기에 맟춰 화면을 제공하기 위해 반응형 웹 형태로 개발하거나 아예 전용 웹(데스크탑, 모바일용)을 개발하기도 합니다.
이 역할은 프엔 개발자가 맡아서 하게 되는데, html, css javascript 언어를 사용해서 웹 프로그램을 개발하게 됩니다. 내부에서 PO, 디자이너 등과 긴밀하게 협업하면서 고객들에게 더 좋은 경험을 줄 수 있도록 웹을 개발합니다.</description></item></channel></rss>