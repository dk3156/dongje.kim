<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>자바스프링 on DONGJE KIM</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/</link><description>Recent content in 자바스프링 on DONGJE KIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://dk3156.github.io/dongje.kim/blog/javaspring/index.xml" rel="self" type="application/rss+xml"/><item><title>자바 스프링 주요 개념</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/spring/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/spring/</guid><description>자바 스프링의 특성 Inversion of Control 객체 생성부터 소멸까지 객체 생명 주기 관리를 개발자가 아닌 컨테이너가 대신 해주는것. 객체의 생성을 책임지고, 의존성을 관리한다. 객체 관리 주체가 프레임워크 (Container) 가 되기 때문에 개발자는 로직에 집중할 수 있는 장점이 있음.
Depedency Injection 각 클래스 간의 의존관계를 빈 설정 (bean definition) 정보를 바탕으로 컨테이너가 자동으로 연결해주는 것. 수정자 주입, 생정자 주입, 필드 주입이 있음. (setter, constructor, method injection)
Bean 이란? 스프링 컨테이너에 의해 관리되는 재사용 가능한 소프트웨어 컴포넌트.</description></item><item><title>자바 스프링 튜토리얼</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/springtutorial/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/springtutorial/</guid><description>데이터 베이스 테이블과 자바 클래스를 매핑하는법 spring-boot-starter-data-jpa 의존성을 추가하고 @Entity 어노테이션을 붙여서 매핑한다.
@RequestBody, @ResponseBody JSON 형식의 데이터를 받기 위해 클라이언트에서 요청할 때 JSON -&amp;gt; Java Object 변환이 필요하다. 서버에서도 Java Object -&amp;gt; JSON 변환해서 보내줘야 한다.
@ResponseBody -&amp;gt; 자바 객체를 JSON 내용으로 매핑한다. return type에 맡는 message Converter 를 통해 리턴하는 객체를 해당 타입으로 변환해서 클라이언트로 전달한다.
request body = { &amp;#34;id&amp;#34;:&amp;#34;test0101&amp;#34; &amp;#34;email&amp;#34;:&amp;#34;test@gmail.com&amp;#34; } public class Member { private String id; private String email; } 이와 같이 바디를 클래스 객체로 변환 시킨다.</description></item></channel></rss>