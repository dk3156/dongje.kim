<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>자바스프링 on DONGJE KIM</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/</link><description>Recent content in 자바스프링 on DONGJE KIM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://dk3156.github.io/dongje.kim/blog/javaspring/index.xml" rel="self" type="application/rss+xml"/><item><title>Thymleaf</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/thymleaf/</link><pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/thymleaf/</guid><description>Thymleaf thymeleaf는 Spring Boot에서 권장하는 JSP를 대체하는 서버사이드 자바 템플릿 엔진입니다. Spring Boot에서는 JSP보다 더 간단한 설정과 HTML 표준 문법으로 thymeleaf를 이용해서 HTML을 작성할 수 있습니다.
도큐멘테이션 https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html 참고.
태그 &amp;ldquo;$&amp;rdquo; &amp;ndash; 컨트롤러에서 전달해주는 변수를 사용. &amp;ldquo;*&amp;rdquo; &amp;ndash; selection 변수. 오브젝트의 어트뷰트 값을 가져와 사용. &amp;ldquo;#&amp;rdquo; &amp;ndash; 메시지 값을 가져와 사용. &amp;ldquo;@&amp;rdquo; &amp;ndash; 링크 값을 가져와 사용. &amp;ldquo;~&amp;rdquo; &amp;ndash; 프래그먼트 값을 가져와사용. 프래그먼트란 코드 조각을 의미하는데, html 코드 조각을 가져와 붙여넣거나 기존 코드와 대체시킬 수 있다.</description></item><item><title>JPA 이란?</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/jpa/</link><pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/jpa/</guid><description>https://yjkim-dev.tistory.com/3 https://dbjh.tistory.com/77 참고.
JPA and H2 H2 Database 란? H2는 자바로 작성된 관계형 데이터베이스 관리 시스템이다. JAVA로 작성된 오픈소스 RDBMS 이며 스프링 부트가 지원하는 인메모리 관계형 데이터베이스이다. 인메모리로 띄우면 애플리케이션 재기동 때마다 초기화된다. 로컬 환경, 테스트 환경에서 많이 쓰인다.
장점- 따로 설치가 필요없다 용량이 매우 가볍다 웹용 콘솔(쿼리툴) 제공하여 개발용 로컬DB로 사용 용이 특징
JPA 란? Java 진영에서 ORM 기술 표준으로 사용하는 인터페이스 모음. 자바 어플리케이션에서 관계형데이터베이스를 사용하는 방식을 정의한다.</description></item><item><title>MVC, 양방향 데이터 바인딩이란?</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/mvc/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/mvc/</guid><description>Model 도메인에 해당하는 정보를 나타내는 오브젝트. 대체로 애플리케이션의 데이터와 행위를 포함하고 있음.
View 모델의 정보를 UI 에서 보여주는 역할. 하나의 모델을 다양한 뷰에서 사용할 수도 있고, 여러 모델을 하나의 뷰에서 사용할 수 있음
Controller 애플리케이션에서 사용자의 입력을 받아 모델에 변경된 상태를 반영. 이는 모델을 변하게 하여 결국 뷰를 갱신. 컨트롤러는 직접 뷰를 변경하는 것이 아니라 로직을 통해 모델을 변경하고 그 결과가 뷰로 뿌려지는 것.</description></item><item><title>자바 스프링 주요 개념</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/spring/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/spring/</guid><description>자바 스프링의 특성 Inversion of Control 객체 생성부터 소멸까지 객체 생명 주기 관리를 개발자가 아닌 컨테이너가 대신 해주는것. 객체의 생성을 책임지고, 의존성을 관리한다. 객체 관리 주체가 프레임워크 (Container) 가 되기 때문에 개발자는 로직에 집중할 수 있는 장점이 있음.
Depedency Injection 각 클래스 간의 의존관계를 빈 설정 (bean definition) 정보를 바탕으로 컨테이너가 자동으로 연결해주는 것. 수정자 주입, 생정자 주입, 필드 주입이 있음. (setter, constructor, method injection)
Bean 이란? 스프링 컨테이너에 의해 관리되는 재사용 가능한 소프트웨어 컴포넌트.</description></item><item><title>자바 스프링 튜토리얼</title><link>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/springtutorial/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://dk3156.github.io/dongje.kim/blog/javaspring/subfolder/springtutorial/</guid><description>https://velog.io/@kjyeon1101/Spring-Controller%EC%99%80-Service 참고.
데이터 베이스 테이블과 자바 클래스를 매핑하는법 spring-boot-starter-data-jpa 의존성을 추가하고 @Entity 어노테이션을 붙여서 매핑한다.
@RequestBody, @ResponseBody JSON 형식의 데이터를 받기 위해 클라이언트에서 요청할 때 JSON -&amp;gt; Java Object 변환이 필요하다. 서버에서도 Java Object -&amp;gt; JSON 변환해서 보내줘야 한다.
@ResponseBody -&amp;gt; 자바 객체를 JSON 내용으로 매핑한다. return type에 맡는 message Converter 를 통해 리턴하는 객체를 해당 타입으로 변환해서 클라이언트로 전달한다.
request body = { &amp;#34;id&amp;#34;:&amp;#34;test0101&amp;#34; &amp;#34;email&amp;#34;:&amp;#34;test@gmail.com&amp;#34; } public class Member { private String id; private String email; } 이와 같이 바디를 클래스 객체로 변환 시킨다.</description></item></channel></rss>